{"version":3,"sources":["Board/Board.js","App.js","serviceWorker.js","index.js"],"names":["getRandomInt","max","Math","floor","random","Board","props","onKeyDown","e","preventDefault","which","setState","data","goVertical","state","randomGenTwice","goHori","console","log","checkGameOver","curScore","temp_d","i","length","j","gameOver","arrOfArr","dir","map","item","reduceZero","col","row","arr","filter","n_arr","push","temp_s","reverse","lenZero","arrZero","restart","bestScore","gen","a","b","this","ranIndex1","ranIndex2","document","addEventListener","bind","ranIndex","genCount","class","onClick","className","it","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1f97b1ca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './Board.css';\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ]\n            ],\n            gen: true,\n            curScore: 0,\n            bestScore: 0,\n            gameOver: false\n        };\n    }\n\n    randomGenTwice() {\n        //change a random 0 to 2/4\n        let a = [];\n        let b = [];\n        let temp_d = this.state.data;\n        for (var i = 0; i < temp_d.length; i++) {\n            for (var j = 0; j < temp_d[0].length; j++) {\n                // console.log(temp_d[i][j]);\n                if (temp_d[i][j] === 0) {\n                    a.push(i);\n                    b.push(j);\n                }\n            }\n        }\n        if (a.length == 0) {\n            return;\n        } else if (a.length == 1) {\n            temp_d[a[0]][b[0]] = 2;\n            this.setState({ data: temp_d });\n        } else {    //a.length >= 2\n            let ranIndex1 = getRandomInt(a.length);\n            let ranIndex2 = getRandomInt(a.length);\n            if (ranIndex2 === ranIndex1) {\n                ranIndex2 = getRandomInt(a.length);\n            }\n            temp_d[a[ranIndex1]][b[ranIndex1]] = 2;\n            temp_d[a[ranIndex2]][b[ranIndex2]] = 2;\n            this.setState({ data: temp_d });\n        }\n\n        //this.forceUpdate();\n    }\n    componentDidMount() {\n        this.randomGenTwice()\n        document.addEventListener('keydown', this.onKeyDown.bind(this));\n    }\n\n    onKeyDown = (e) => {\n        e.preventDefault();\n        if (e.which === 40) { //go down\n            this.setState({\n                data: this.goVertical(this.state.data, 0)\n            })\n            this.randomGenTwice()\n        } else if (e.which === 38) { // go up\n            this.setState({\n                data: this.goVertical(this.state.data, 1)\n            })\n            this.randomGenTwice()\n        } else if (e.which === 39) { // go right\n            this.setState({\n                data: this.goHori(this.state.data, 0)\n            })\n            this.randomGenTwice()\n        } else if (e.which === 37) { // go left\n            this.setState({\n                data: this.goHori(this.state.data, 1)\n            })\n            this.randomGenTwice()\n        }\n\n        /*var temp_s = this.state.data.reduce(function(a,b) { return a.concat(b) }) // flatten array\n            .reduce(function(a,b) { return a + b });\n        this.setState({score: temp_s});*/\n        console.log(this.checkGameOver())\n        console.log(this.state.curScore);\n\n    }\n\n    checkGameOver = () => {  //true if game over\n        let temp_d = this.state.data;\n        for (var i = 0; i < temp_d.length; i++) {\n\n            for (var j = 0; j < temp_d[0].length; j++) {\n                if (i != temp_d.length - 1) {\n                    if (temp_d[i + 1][j] == temp_d[i][j]) {\n                        this.setState({ gameOver: false });\n                        return false;\n                    }\n                }\n                if (j != temp_d.length - 1) {\n                    if (temp_d[i][j + 1] == temp_d[i][j]) {\n                        this.setState({ gameOver: false });\n                        return false;\n                    }\n                }\n            }\n        }\n        this.setState({ gameOver: true });\n        return true;\n    }\n\n    goVertical = (arrOfArr, dir) => {\n        return arrOfArr.map((item, i) => this.reduceZero(item, dir))\n    }\n\n    goHori = (arrOfArr, dir) => {\n        arrOfArr = arrOfArr[0].map((col, i) => arrOfArr.map(row => row[i]));\n        arrOfArr = arrOfArr.map((item, i) => this.reduceZero(item, dir))\n        arrOfArr = arrOfArr[0].map((col, i) => arrOfArr.map(row => row[i]));\n        return arrOfArr\n    }\n\n    reduceZero = (arr, dir) => {\n        var arr = arr.filter((item) => item !== 0)\n        var n_arr = [];\n        // sum repeated num\n        if (dir === 0) {\n            for (var i = arr.length - 1; i >= 0; i--) {\n                if (arr[i] === arr[i - 1]) {\n                    n_arr.push(arr[i] * 2)\n                    let temp_s = this.state.curScore + (arr[i] * 2)\n                    //update score\n                    this.setState({ curScore: temp_s })\n                    i--\n\n                } else {\n                    n_arr.push(arr[i]);\n                }\n            }\n            arr = n_arr.reverse()\n        } else {\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i] === arr[i + 1]) {\n                    n_arr.push(arr[i] * 2)\n                    let temp_s = this.state.curScore + (arr[i] * 2)\n                    this.setState({ curScore: temp_s })\n                    i++\n                } else {\n                    n_arr.push(arr[i]);\n                }\n            }\n            arr = n_arr\n        }\n        // fill in zero\n        var lenZero = 4 - arr.length;\n        var arrZero = []\n        while (lenZero != 0) {\n            arrZero.push(0)\n            lenZero--\n        }\n        return dir === 0 ? [...arrZero, ...arr] : [...arr, ...arrZero]\n    }\n\n    randomGenOnce() {\n        //change a random 0 to 2/4\n        let a = [];\n        let b = [];\n        let temp_d = this.state.data;\n        for (var i = 0; i < temp_d.length; i++) {\n            for (var j = 0; j < temp_d[0].length; j++) {\n                console.log(temp_d[i][j]);\n                if (temp_d[i][j] === 0) {\n                    a.push(i);\n                    b.push(j);\n                }\n            }\n        }\n        if (a.length == 0) {\n            return;\n        }\n        let ranIndex = getRandomInt(a.length);\n        temp_d[a[ranIndex]][b[ranIndex]] = 2;\n        this.setState({ data: temp_d });\n        this.setState({ genCount: this.state.genCount + 1 });\n        //this.forceUpdate();\n    }\n\n    restart = () => {\n        this.setState({\n            gameOver: false,\n            curScore: 0,\n            data: [\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ]\n            ]\n        })\n        if (this.state.bestScore < this.state.curScore) {\n            this.setState({\n                bestScore: this.state.curScore\n            })\n        }\n    }\n\n    render() {\n        let gameOver = (\n            <div class=\"game-message game-over\">\n                <p >Game over!</p>\n                <div class=\"lower\" >\n                    <a class=\"retry-button\" onClick={this.restart}>Try again</a></div></div>\n        )\n        return (\n            <div className=\"game-container\">\n                <div class=\"scores-container\" >\n                    <div class=\"score-container\" >{this.state.curScore}</div>\n                    <span >&nbsp;</span>\n                    <div class=\"best-container\" >{this.state.bestScore}</div></div>\n                {this.state.gameOver ? gameOver : null}\n                <div className=\"board\">\n                    {/* <button onClick={() => { this.randomGenTwice() }}>RandomGen</button> */}\n                    <div className=\"grid-container\" >\n                        <div className=\"grid-row\" >\n                            <div className=\"grid-cell\" ></div>\n                            <div className=\"grid-cell\" ></div>\n                            <div className=\"grid-cell\" ></div>\n                            <div className=\"grid-cell\" ></div>\n                        </div><div className=\"grid-row\" >\n                            <div className=\"grid-cell\" ></div>\n                            <div className=\"grid-cell\" ></div>\n                            <div className=\"grid-cell\" ></div>\n                            <div className=\"grid-cell\"></div>\n                        </div>\n                        <div className=\"grid-row\" >\n                            <div className=\"grid-cell\" ></div>\n                            <div className=\"grid-cell\" ></div>\n                            <div className=\"grid-cell\" ></div>\n                            <div className=\"grid-cell\" ></div>\n                        </div><div className=\"grid-row\">\n                            <div className=\"grid-cell\" >\n                            </div><div className=\"grid-cell\" >\n                            </div><div className=\"grid-cell\" >\n                            </div><div className=\"grid-cell\" >\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"tile-container\">\n                        {\n                            this.state.data.map((item, i) => {\n                                return <div>{item.map((it, j) => {\n                                    if (it !== 0) return <div className={\"tile tile-\" + it + \" tile-position-\" + (i + 1) + \"-\" + (j + 1)} >\n                                        <div className=\"tile-inner\">{it}</div></div>\n                                })}</div>\n                            })\n                        }\n                    </div>\n\n                </div></div>\n\n\n        );\n    }\n}\n\nexport default Board;\n","\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Board from \"./Board/Board.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"pg\">\n          <h1>2048</h1>\n          <p>Use keyboard ↓ ↑ ← → to Join the numbers and get to 2048!<br /> 用上下左右方向键将相同的数字融合在一起得到2048！</p>\n          <Board />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}